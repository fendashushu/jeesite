<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.core.dao.statistics.DayStatisticsDao">
    
	<sql id="dayStatisticsColumns">
		a.id AS "id",
		a.data_date AS "dataDate",
		a.new_members AS "newMembers",
		a.all_members AS "allMembers",
		a.new_bonus AS "newBonus",
		a.all_bonus AS "allBonus",
		a.out_bonus AS "outBonus",
		a.out_all_bonus AS "outAllBonus",
		a.bobi AS "bobi",
		a.all_bobi AS "allBobi",
		a.ext1 AS "ext1",
		a.ext2 AS "ext2",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="dayStatisticsJoins">
	</sql>
    
	<select id="get" resultType="DayStatistics">
		SELECT 
			<include refid="dayStatisticsColumns"/>
		FROM day_statistics a
		<include refid="dayStatisticsJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getNewDataDay" resultType="map">
		SELECT
			a.new_members newMembers ,a.new_bonus newBonus
		FROM day_statistics a
		WHERE DATE_FORMAT(a.data_date,'%Y-%m-%d') = #{value} and a.del_flag = '0'
	</select>

	<select id="getTransfer" resultType="map">
        select sum(outAmout) outAmount,sum(inAmount) inAmount,sum(rechargeAmount) rechargeAmount from(
            select sum(amount) outAmout,0 inAmount,0 rechargeAmount from pv_transfer where login_name = #{value}
            union all
            select 0 outAmout,sum(amount) inAmount,0 rechargeAmount from pv_transfer where to_login_name = #{value}
            union all
            select 0 outAmout,0 inAmount,sum(amount) rechargeAmount from pv_recharge where login_name = #{value}
        )a

    </select>

	<select id="getNewDataMember" resultType="map">
        select sum(case when activate = '0' then 1 else 0 end) noMember,
               sum(case when activate = '0' then 0 else 1 end) yesMember
        from sys_member a
        where a.del_flag = '0'
	</select>

	<select id="getNewDataOrder" resultType="map">
        select sum(orders) orders,sum(recharges) recharges from (
        select count(1) orders ,0 recharges from orders where status = '0' and del_flag = '0'
        union all
        select 0 orders ,count(1) recharges from pv_recharge where status = '0' and del_flag = '0')a
    </select>

	<select id="getNewDataMonth" resultType="map">
		SELECT
			sum(a.new_members) monthMembers ,sum(a.new_bonus) monthBonus
		FROM day_statistics a
		WHERE DATE_FORMAT(a.data_date,'%Y-%m-%d') BETWEEN #{frist} and #{last} and a.del_flag = '0'
	</select>

	<select id="getNewDataYear" resultType="map">
		SELECT
			sum(a.new_members) yearMembers ,sum(a.new_bonus) yearBonus
		FROM day_statistics a
		WHERE DATE_FORMAT(a.data_date,'%Y-%m-%d') BETWEEN #{frist} and #{last} and a.del_flag = '0'
	</select>

	<select id="getByDate" resultType="DayStatistics">
		SELECT
			<include refid="dayStatisticsColumns"/>
		FROM day_statistics a
		<include refid="dayStatisticsJoins"/>
		WHERE DATE_FORMAT(a.data_date,'%Y-%m-%d') = #{value} and a.del_flag = '0'
	</select>

	<select id="getLastest" resultType="DayStatistics">
		SELECT
			<include refid="dayStatisticsColumns"/>
		FROM day_statistics a
		<include refid="dayStatisticsJoins"/>
        where a.data_date =( select max(data_date) from day_statistics where DATE_FORMAT(data_date,'%Y-%m-%d') != #{value} ) and del_flag = '0'
	</select>
	
	<select id="findList" resultType="DayStatistics">
		SELECT 
			<include refid="dayStatisticsColumns"/>
		FROM day_statistics a
		<include refid="dayStatisticsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
        <if test="beginDate != null and beginDate != ''">
            and a.data_date >= #{beginDate}
        </if>
        <if test="endDate != null and endDate != ''">
            and a.data_date &lt;= #{endDate}
        </if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="DayStatistics">
		SELECT 
			<include refid="dayStatisticsColumns"/>
		FROM day_statistics a
		<include refid="dayStatisticsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO day_statistics(
			id,
			data_date,
			new_members,
			all_members,
			new_bonus,
			all_bonus,
			out_bonus,
			out_all_bonus,
			bobi,
			all_bobi,
			ext1,
			ext2,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{dataDate},
			#{newMembers},
			#{allMembers},
			#{newBonus},
			#{allBonus},
			#{outBonus},
			#{outAllBonus},
			#{bobi},
			#{allBobi},
			#{ext1},
			#{ext2},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE day_statistics SET 	
			data_date = #{dataDate},
			new_members = #{newMembers},
			all_members = #{allMembers},
			new_bonus = #{newBonus},
			all_bonus = #{allBonus},
			out_bonus = #{outBonus},
			out_all_bonus = #{outAllBonus},
			bobi = #{bobi},
			all_bobi = #{allBobi},
			ext1 = #{ext1},
			ext2 = #{ext2},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE day_statistics SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>